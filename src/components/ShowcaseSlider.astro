---
---

<div class="showcase-slider">
  <button class="slider-btn slider-btn-prev" aria-label="Previous app">
    <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
      <polyline points="15 18 9 12 15 6"></polyline>
    </svg>
  </button>

  <div class="slider-container">
    <div class="slider-track">
      <div class="slide">
        <h2><a href="https://github.com/atuinsh/atuin">`atuin`</a></h2>
        <p>Atuin replaces your existing shell history with a SQLite database, and records additional context for your commands.</p>
        <img src="https://github.com/atuinsh/atuin/blob/main/demo.gif?raw=true" alt="atuin demo" />
      </div>

      <div class="slide">
        <h2><a href="https://github.com/imsnif/bandwhich">`bandwhich`</a></h2>
        <p>This is a CLI utility for displaying current network utilization by process, connection and remote IP/hostname</p>
        <img src="https://github.com/imsnif/bandwhich/blob/main/res/demo.gif?raw=true" alt="bandwhich demo" />
      </div>

      <div class="slide">
        <h2><a href="https://github.com/orhun/binsider">`binsider`</a></h2>
        <p>Perform binary analysis in your terminal.</p>
        <img src="https://github.com/orhun/binsider/blob/main/website/src/content/assets/quickstart.gif?raw=true" alt="binsider demo" />
      </div>

      <div class="slide">
        <h2><a href="https://github.com/ClementTsang/bottom">`bottom`</a></h2>
        <p>A customizable cross-platform graphical process/system monitor for the terminal</p>
        <img src="https://github.com/ClementTsang/bottom/blob/main/assets/demo.gif?raw=true" alt="bottom demo" />
      </div>

      <div class="slide">
        <h2><a href="https://github.com/matrixfrog/crossword">`crossword`</a></h2>
        <p>Play crossword puzzles in your terminal.</p>
        <img src="https://github.com/user-attachments/assets/8a2bb53b-f461-4ddd-b60c-9ae5170b501d" alt="crossword demo" />
      </div>

      <div class="slide">
        <h2><a href="https://github.com/YS-L/csvlens">`csvlens`</a></h2>
        <p>`csvlens` is A command line CSV file viewer. It is like less but made for CSV.</p>
        <img src="/csvlens.gif" alt="csvlens demo" />
      </div>
    </div>
  </div>

  <button class="slider-btn slider-btn-next" aria-label="Next app">
    <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
      <polyline points="9 18 15 12 9 6"></polyline>
    </svg>
  </button>
</div>

<style>
  .showcase-slider {
    position: relative;
    display: flex;
    align-items: center;
    gap: 1rem;
    max-width: 1200px;
  }

  .slider-container {
    flex: 1;
    overflow: hidden;
    border-radius: 0.5rem;
  }

  .slider-track {
    display: flex;
    transition: transform 0.5s ease-in-out;
  }

  .slide {
    min-width: 100%;
    padding: 0 2rem 0 2rem;
    box-sizing: border-box;
  }

  .slide h2 {
    margin: 0;
  }

  .slide p {
    margin-bottom: 0rem;
    line-height: 1.6;
  }

  .slide img {
    max-width: 100%;
    height: auto;
    border-radius: 0.375rem;
    box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1);
  }

  .slider-btn {
    background: rgba(0, 0, 0, 0.5);
    border: none;
    border-radius: 50%;
    width: 48px;
    height: 48px;
    display: flex;
    align-items: center;
    justify-content: center;
    cursor: pointer;
    color: white;
    transition: all 0.2s ease;
    flex-shrink: 0;
  }

  .slider-btn:hover {
    background: rgba(0, 0, 0, 0.7);
    transform: scale(1.1);
  }

  .slider-btn:disabled {
    opacity: 0.3;
    cursor: not-allowed;
  }

  .slider-btn:disabled:hover {
    transform: none;
  }

  .slider-indicators {
    display: flex;
    justify-content: center;
    gap: 0.5rem;
    margin-top: 1.5rem;
  }

  .indicator {
    width: 12px;
    height: 12px;
    border-radius: 50%;
    border: 2px solid currentColor;
    background: transparent;
    cursor: pointer;
    transition: all 0.2s ease;
    padding: 0;
  }

  .indicator.active {
    background: currentColor;
    transform: scale(1.2);
  }

  .indicator:hover {
    transform: scale(1.3);
  }

  @media (max-width: 768px) {
    .showcase-slider {
      gap: 0.5rem;
    }

    .slider-btn {
      width: 40px;
      height: 40px;
    }

    .slide {
      padding: 1rem;
    }
  }
</style>

<script>
  const sliderTrack = document.querySelector('.slider-track') as HTMLElement;
  const slides = document.querySelectorAll('.slide');
  const prevBtn = document.querySelector('.slider-btn-prev') as HTMLButtonElement;
  const nextBtn = document.querySelector('.slider-btn-next') as HTMLButtonElement;
  
  let currentIndex = 0;
  const totalSlides = slides.length;

  function updateSlider() {
    const offset = -currentIndex * 100;
    sliderTrack.style.transform = `translateX(${offset}%)`;
    
    // Update button states
    prevBtn.disabled = currentIndex === 0;
    nextBtn.disabled = currentIndex === totalSlides - 1;
  }

  function goToSlide(index: number) {
    currentIndex = Math.max(0, Math.min(index, totalSlides - 1));
    updateSlider();
  }

  prevBtn.addEventListener('click', () => {
    goToSlide(currentIndex - 1);
  });

  nextBtn.addEventListener('click', () => {
    goToSlide(currentIndex + 1);
  });

  // Keyboard navigation
  document.addEventListener('keydown', (e) => {
    if (e.key === 'ArrowLeft') {
      goToSlide(currentIndex - 1);
    } else if (e.key === 'ArrowRight') {
      goToSlide(currentIndex + 1);
    }
  });

  // Touch support for mobile
  let touchStartX = 0;
  let touchEndX = 0;

  sliderTrack.addEventListener('touchstart', (e) => {
    touchStartX = e.changedTouches[0].screenX;
  });

  sliderTrack.addEventListener('touchend', (e) => {
    touchEndX = e.changedTouches[0].screenX;
    handleSwipe();
  });

  function handleSwipe() {
    const swipeThreshold = 50;
    const diff = touchStartX - touchEndX;
    
    if (Math.abs(diff) > swipeThreshold) {
      if (diff > 0) {
        goToSlide(currentIndex + 1);
      } else {
        goToSlide(currentIndex - 1);
      }
    }
  }

  // Initialize
  updateSlider();
</script>
