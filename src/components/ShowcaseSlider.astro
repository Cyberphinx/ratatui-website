---
import crosstui from "../assets/crosstui.gif"
import yazi from "../assets/reduced.gif"

const slides = [
  {
    title: "binsider",
    url: "https://github.com/orhun/binsider",
    description: "Perform binary analysis in your terminal",
    image: "https://github.com/orhun/binsider/blob/main/website/src/content/assets/quickstart.gif?raw=true",
    alt: "binsider demo"
  },
  {
    title: "crossword",
    url: "https://github.com/matrixfrog/crossword",
    description: "Play crossword puzzles in your terminal",
    image: crosstui.src,
    alt: "crossword demo"
  },
  {
    title: "csvlens",
    url: "https://github.com/YS-L/csvlens",
    description: "`csvlens` is A command line CSV file viewer. It is like less but made for CSV",
    image: "/csvlens.gif",
    alt: "csvlens demo"
  },
  {
    title: "fzf-make",
    url: "https://github.com/kyu08/fzf-make",
    description: "A command line tool that executes make target using fuzzy finder with preview window",
    image: "https://raw.githubusercontent.com/kyu08/fzf-make/main/static/demo.gif",
    alt: "fzf-make demo"
  },
  {
    title: "material",
    url: "https://crates.io/crates/material",
    description: "A material design color palette for the terminal",
    image: "https://i.ibb.co/2MDKmh7/Screenshot-2022-08-02-at-16-43-12.png",
    alt: "material demo"
  },
  {
    title: "oxker",
    url: "https://github.com/mrjackwills/oxker/",
    description: "A simple TUI to view & control docker containers",
    image: "https://raw.githubusercontent.com/mrjackwills/oxker/main/.github/demo_01.webp?raw=true",
    alt: "oxker demo"
  },
  {
    title: "openai-tui",
    url: "https://github.com/zaghaghi/openapi-tui",
    description: "Unlock the power of APIs with simplicity and speed, right from your terminal. View OpenAPI documentations in your terminal",
    image: "https://github.com/zaghaghi/openapi-tui/blob/main/static/demo.gif?raw=true",
    alt: "openai-tui demo"
  },
  {
    title: "scope-tui",
    url: "https://github.com/alemidev/scope-tui",
    description: "A simple oscilloscope/vectorscope/spectroscope for your terminal",
    image: "https://camo.githubusercontent.com/4b11674184b07eebd6bc386c38c9cce1a7a70ae82733b44cd977c8ab85c5a691/68747470733a2f2f63646e2e616c656d692e6465762f73636f70652d7475692d776964652e706e67",
    alt: "scope-tui demo"
  },
  {
    title: "slumber",
    url: "https://github.com/LucasPickering/slumber",
    description: "Terminal HTTP/REST client",
    image: "https://media.githubusercontent.com/media/LucasPickering/slumber/master/docs/src/images/demo.gif",
    alt: "slumber demo"
  },
  {
    title: "steer",
    url: "https://github.com/BrendanGraham14/steer",
    description: "A CLI-based AI coding agent for local dev, scripts/CI, and automation",
    image: "https://raw.githubusercontent.com/brendangraham14/steer/main/.github/images/demo.gif",
    alt: "steer demo"
  },
  {
    title: "taskwarrior-tui",
    url: "https://github.com/kdheepak/taskwarrior-tui",
    description: "A terminal user interface for taskwarrior",
    image: "https://user-images.githubusercontent.com/1813121/159858280-3ca31e9a-fc38-4547-a92d-36a7758cf5dc.gif",
    alt: "taskwarrior-tui demo"
  },
  {
    title: "television",
    url: "https://github.com/alexpasmantier/television",
    description: "Television is a fast and versatile fuzzy finder TUI",
    image: "https://github.com/user-attachments/assets/7a967f9c-779e-4915-baa8-160f586f8936",
    alt: "television demo"
  },
  {
    title: "trippy",
    url: "https://github.com/fujiapple852/trippy",
    description: "A network diagnostic tool that combines the functionality of traceroute and ping and is designed to assist with the analysis of networking issues",
    image: "https://raw.githubusercontent.com/fujiapple852/trippy/master/assets/0.12.0/demo.gif?raw=true",
    alt: "trippy demo"
  },
  {
    title: "yozefu",
    url: "https://github.com/MAIF/yozefu",
    description: "Y≈çzefu is an interactive TUI application for exploring data of a Kafka cluster",
    image: "https://vhs.charm.sh/vhs-UpIJD2h92vKkj01XSS0r0.gif",
    alt: "yozefu demo"
  },
 ];
---

<div class="relative flex items-center gap-1 max-w-[1440px]">
  <button class="bracket-btn bg-yellow-500 text-black w-[45px] h-[45px] cursor-pointer slider-btn-prev" aria-label="Previous app">
    <svg xmlns="http://www.w3.org/2000/svg" width="100%" height="100%" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
      <polyline points="15 18 9 12 15 6"></polyline>
    </svg>
  </button>

  <div class="flex-1 overflow-hidden h-auto text-center">
    <div class="slider-track">
      {slides.map((slide) => (
        <div class="slide">
          <a href={slide.url} target="_blank" aria-label={slide.title}>
            <img class="w-auto h-[720px] mx-auto object-fit object-top max-xl:h-[400px]" src={slide.image} alt={slide.alt} />
          </a>
          <h2 class="!mt-5">
            <a href={slide.url} target="_blank" aria-label={slide.title}>
              <span class="bracket-btn text-black dark:text-white">{slide.title}</span>
            </a>
          </h2>
          <p class="text-lg text-black dark:text-white">
            <span class="text-yellow-500">[</span>
            {slide.description}
            <span class="text-yellow-500">]</span>
          </p>
        </div>
      ))}
    </div>
  </div>

  <button class="bracket-btn bg-yellow-500 text-black w-[45px] h-[45px] cursor-pointer slider-btn-next" aria-label="Next app">
    <svg xmlns="http://www.w3.org/2000/svg" width="100%" height="100%" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
      <polyline points="9 18 15 12 9 6"></polyline>
    </svg>
  </button>
</div>

<style>
  .slider-track {
    display: flex;
    height: auto;
    transition: transform 0.5s ease-in-out;
  }

  .slide {
    min-width: 100%;
    padding: 0 2rem 0 2rem;
  }


  @media (max-width: 768px) {
    .slide {
      padding: 1rem;
    }
  }
</style>

<script>
  const sliderTrack = document.querySelector('.slider-track') as HTMLElement;
  const slides = document.querySelectorAll('.slide');
  const prevBtn = document.querySelector('.slider-btn-prev') as HTMLButtonElement;
  const nextBtn = document.querySelector('.slider-btn-next') as HTMLButtonElement;
  
  let currentIndex = 0;
  const totalSlides = slides.length;

  function updateSlider() {
    const offset = -currentIndex * 100;
    sliderTrack.style.transform = `translateX(${offset}%)`;
  }

  function goToSlide(index: number) {
    // Wrap around: if past the last slide, go to first; if before first, go to last
    if (index >= totalSlides) {
      currentIndex = 0;
    } else if (index < 0) {
      currentIndex = totalSlides - 1;
    } else {
      currentIndex = index;
    }
    updateSlider();
  }

  prevBtn.addEventListener('click', () => {
    goToSlide(currentIndex - 1);
  });

  nextBtn.addEventListener('click', () => {
    goToSlide(currentIndex + 1);
  });

  // Keyboard navigation
  document.addEventListener('keydown', (e) => {
    if (e.key === 'ArrowLeft') {
      goToSlide(currentIndex - 1);
    } else if (e.key === 'ArrowRight') {
      goToSlide(currentIndex + 1);
    }
  });

  // Touch support for mobile
  let touchStartX = 0;
  let touchEndX = 0;

  sliderTrack.addEventListener('touchstart', (e) => {
    touchStartX = e.changedTouches[0].screenX;
  });

  sliderTrack.addEventListener('touchend', (e) => {
    touchEndX = e.changedTouches[0].screenX;
    handleSwipe();
  });

  function handleSwipe() {
    const swipeThreshold = 50;
    const diff = touchStartX - touchEndX;
    
    if (Math.abs(diff) > swipeThreshold) {
      if (diff > 0) {
        goToSlide(currentIndex + 1);
      } else {
        goToSlide(currentIndex - 1);
      }
    }
  }

  // Initialize
  currentIndex = Math.floor(Math.random() * totalSlides);
  updateSlider();
</script>
