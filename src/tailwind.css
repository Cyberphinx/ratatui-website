@layer base, starlight, components, utilities;

@import "@astrojs/starlight-tailwind";
@import "tailwindcss";
@import "tailwindcss/utilities.css" layer(utilities);

@theme {
  /* Custom accent colors. */
  --color-accent-50: var(--color-blue-50);
  --color-accent-100: var(--color-blue-100);
  --color-accent-200: var(--color-blue-200);
  --color-accent-300: var(--color-blue-300);
  --color-accent-400: var(--color-blue-400);
  --color-accent-500: var(--color-blue-500);
  --color-accent-600: var(--color-blue-600);
  --color-accent-700: var(--color-blue-700);
  --color-accent-800: var(--color-blue-800);
  --color-accent-900: var(--color-blue-900);
  --color-accent-950: var(--color-blue-950);
  /* Custom gray colors. */
  --color-gray-50: var(--color-slate-50);
  --color-gray-100: var(--color-slate-100);
  --color-gray-200: var(--color-slate-200);
  --color-gray-300: var(--color-slate-300);
  --color-gray-400: var(--color-slate-400);
  --color-gray-500: var(--color-slate-500);
  --color-gray-600: var(--color-slate-600);
  --color-gray-700: var(--color-slate-700);
  --color-gray-800: var(--color-slate-800);
  --color-gray-900: var(--color-slate-900);
  --color-gray-950: var(--color-slate-950);
}

:root[data-theme="dark"] {
  --sl-color-basic: white;
}

:root[data-theme="light"] {
  --sl-color-basic: black;
  ;
}

@media (min-width: 50rem) {
  /* Move the logo to the left side  */

  .hero {
    grid-template-columns: 3fr 7fr;
    gap: 6%;
    padding-block: 1.5rebottom
  }

  .hero>img,
  .hero>.hero-html {
    order: 0;
    width: min(100%, 15rem);
  }
}

.three-cols {
  display: grid;
  padding-top: 1rem;

  @media (min-width: 50rem) {
    grid-template-columns: 1fr 1fr 1fr;
  }

  gap: 2.5rem;

  h3 {
    margin-bottom: 0rem;
  }
}

/* Fix for SVGBob diagrams on dark mode */
svg.svgbob text,
svg.svgbob .filled {
  fill: currentColor;
}

svg.svgbob .solid,
svg.svgbob polygon {
  stroke: currentColor;
}

/* Fix for Mermaid diagrams on dark mode */
svg[aria-roledescription="sequence"] .messageText {
  fill: currentColor !important;
}

svg[aria-roledescription="sequence"] line,
svg[aria-roledescription="sequence"] path,
svg[aria-roledescription="sequence"] .flowchart-link {
  stroke: currentColor !important;
}

svg[aria-roledescription="flowchart-v2"] .arrowMarkerPath {
  fill: currentColor;
}

svg[aria-roledescription="flowchart-v2"] line,
svg[aria-roledescription="flowchart-v2"] path,
svg[aria-roledescription="flowchart-v2"] .flowchart-link {
  stroke: currentColor !important;
}

svg[aria-roledescription="stateDiagram"] {
  line-height: normal;
}

svg[aria-roledescription="stateDiagram"] line,
svg[aria-roledescription="stateDiagram"] path,
svg[aria-roledescription="stateDiagram"] circle {
  stroke: currentColor !important;
}

/* Text highlight colour for tagline */
:root[data-theme="dark"] {
  --sl-color-highlight: oklch(79.5% 0.184 86.047);
}

:root[data-theme="light"] {
  --sl-color-highlight: oklch(48.8% 0.243 264.376);
  ;
}

:root[data-theme="dark"] {
  --sl-color-highlight-2: oklch(79.5% 0.184 86.047);
}

:root[data-theme="light"] {
  --sl-color-highlight-2: oklch(79.5% 0.184 86.047);
  ;
}

marker#arrowhead path {
  fill: currentColor !important;
  stroke: currentColor !important;
}

:root {
  --sl-content-width: 60rem;
}

/* Hide page title and horizontal line on splash template pages */
.sl-container h1:first-child {
  display: none !important;
}

/* Hide ALL horizontal lines in main content for splash pages */
.sl-container hr,
main hr,
article hr,
.content hr {
  display: none !important;
}

/* More aggressive targeting of potential hr elements */
hr:first-child,
hr:first-of-type,
.sl-container>hr,
main .sl-container>hr,
main .content>hr {
  display: none !important;
}

/* Hide the specific border-top rule that creates the line between content panels */
.content-panel+.content-panel {
  border-top: none !important;
}

/* Hide the first empty content panel on splash pages */
main .content-panel:first-child:empty,
main .content-panel:first-child:not(:has(*)) {
  display: none !important;
}

/* Landing page font */
.landing-mono {
  font-family: "SF Mono", Monaco, "Cascadia Code", "Roboto Mono", Consolas, "Courier New", monospace;
}

/* Landing page text blinking cursor animation */
.landing-highlight {
  color: var(--sl-color-highlight);
  font-weight: 600;
}

.landing-highlight::after {
  content: '';
  display: inline-block;
  width: 1.25rem;
  height: 0.85em;
  background: var(--sl-color-highlight);
  margin-left: 0.2rem;
  animation: blink 1s infinite;
  vertical-align: 0em;
}

.landing-highlight-tall {
  color: var(--sl-color-highlight-2);
  font-weight: 600;
}

.landing-highlight-tall::after {
  content: '';
  display: inline-block;
  width: 1.25rem;
  height: 1em;
  background: var(--sl-color-highlight-2);
  margin-left: 0.2rem;
  animation: blink 1s infinite;
  vertical-align: -0.2em;
}

@keyframes blink {

  0%,
  100% {
    opacity: 0;
  }

  50% {
    opacity: 1;
  }
}

/* Squiggle underline hover animation */
.btn-slide::after {
  content: '';
  position: absolute;
  bottom: -3px;
  left: 0;
  width: 0;
  height: 6px;
  background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 20 4'%3E%3Cpath fill='none' stroke='red' stroke-width='2' d='M0,2 Q2.5,0 5,2 T10,2 T15,2 T20,2'/%3E%3C/svg%3E");
  background-repeat: repeat-x;
  background-size: 20px 6px;
  transition: width 0.4s ease;
}

a:hover .btn-slide::after {
  width: 100%;
}

/* Cyberpunk glitch effect on hover */
/* Base setup */
.glitch-container {
  position: relative;
  display: inline-block;
  overflow: visible;
}

.glitch-text {
  position: relative;
  display: inline-block;
  color: inherit;
}

/* Create more aggressive pseudo-elements */
.glitch-text::before,
.glitch-text::after {
  content: attr(data-text);
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  opacity: 0;
  mix-blend-mode: screen;
}

/* Activate glitch on hover with chromatic aberration */
.glitch-container:hover .glitch-text::before {
  opacity: 0.9;
  color: #00fffc;
  /* Cyan */
  animation: cyberpunk-glitch-1 0.3s cubic-bezier(0.25, 0.46, 0.45, 0.94) infinite;
  text-shadow: -2px 0 #ff00ff, 2px 2px #00fffc;
}

.glitch-container:hover .glitch-text::after {
  opacity: 0.9;
  color: #ff00ff;
  /* Magenta */
  animation: cyberpunk-glitch-2 0.3s cubic-bezier(0.25, 0.46, 0.45, 0.94) reverse infinite;
  text-shadow: -2px -2px #00fffc, 2px 0 #ff00ff;
}

@keyframes cyberpunk-glitch-1 {
  0% {
    transform: translate(0);
    clip-path: polygon(0 0, 100% 0, 100% 100%, 0 100%);
  }

  10% {
    transform: translate(-5px, 2px);
    clip-path: polygon(0 0, 100% 0, 100% 15%, 0 15%);
  }

  20% {
    transform: translate(5px, -3px);
    clip-path: polygon(0 85%, 100% 85%, 100% 100%, 0 100%);
  }

  30% {
    transform: translate(-3px, 3px);
    clip-path: polygon(0 40%, 100% 40%, 100% 60%, 0 60%);
  }

  40% {
    transform: translate(4px, -2px) skew(-5deg);
    clip-path: polygon(0 20%, 100% 20%, 100% 30%, 0 30%);
  }

  50% {
    transform: translate(-4px, 4px);
    clip-path: polygon(0 70%, 100% 70%, 100% 80%, 0 80%);
  }

  60% {
    transform: translate(3px, -4px) skew(5deg);
    clip-path: polygon(0 50%, 100% 50%, 100% 55%, 0 55%);
  }

  70% {
    transform: translate(-5px, 2px);
    clip-path: polygon(0 0, 100% 0, 100% 10%, 0 10%);
  }

  80% {
    transform: translate(5px, -3px);
    clip-path: polygon(0 90%, 100% 90%, 100% 100%, 0 100%);
  }

  100% {
    transform: translate(0);
    clip-path: polygon(0 0, 100% 0, 100% 100%, 0 100%);
  }
}

@keyframes cyberpunk-glitch-2 {
  0% {
    transform: translate(0);
    clip-path: polygon(0 0, 100% 0, 100% 100%, 0 100%);
  }

  15% {
    transform: translate(3px, -2px);
    clip-path: polygon(0 60%, 100% 60%, 100% 75%, 0 75%);
  }

  25% {
    transform: translate(-4px, 3px) skew(3deg);
    clip-path: polygon(0 5%, 100% 5%, 100% 15%, 0 15%);
  }

  35% {
    transform: translate(5px, -4px);
    clip-path: polygon(0 80%, 100% 80%, 100% 95%, 0 95%);
  }

  45% {
    transform: translate(-3px, 2px);
    clip-path: polygon(0 35%, 100% 35%, 100% 45%, 0 45%);
  }

  55% {
    transform: translate(4px, 4px) skew(-4deg);
    clip-path: polygon(0 0, 100% 0, 100% 8%, 0 8%);
  }

  65% {
    transform: translate(-5px, -2px);
    clip-path: polygon(0 65%, 100% 65%, 100% 70%, 0 70%);
  }

  75% {
    transform: translate(3px, 3px);
    clip-path: polygon(0 25%, 100% 25%, 100% 35%, 0 35%);
  }

  85% {
    transform: translate(-4px, -3px) skew(2deg);
    clip-path: polygon(0 92%, 100% 92%, 100% 100%, 0 100%);
  }

  100% {
    transform: translate(0);
    clip-path: polygon(0 0, 100% 0, 100% 100%, 0 100%);
  }
}

@media (prefers-reduced-motion: reduce) {

  .glitch-container:hover .glitch-text::before,
  .glitch-container:hover .glitch-text::after {
    animation: none;
  }
}